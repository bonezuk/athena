// albumModel 1
SELECT CASE WHEN a.groupid>=0 THEN 1 ELSE 0 END AS flag,
       CASE WHEN a.groupid>=0 THEN a.groupid ELSE a.albumid END AS id,
       a.albumname
  FROM album AS a
  GROUP BY id
  ORDER BY a.albumname

// albumModel 2
SELECT CASE WHEN a.groupid>=0 THEN 1 ELSE 0 END AS flag,
       CASE WHEN a.groupid>=0 THEN a.groupid ELSE a.albumid END AS id,
       a.albumname
  FROM album AS a
  WHERE a.albumID=2
  GROUP BY id
  ORDER BY a.albumname

// albumModel 3
SELECT CASE WHEN a.groupid>=0 THEN 1 ELSE 0 END AS flag,
       CASE WHEN a.groupid>=0 THEN a.groupid ELSE a.albumid END AS id,
       a.albumname
  FROM album AS a
  WHERE a.groupID=5
  GROUP BY id
  ORDER BY a.albumname

// albumModel 4
SELECT CASE WHEN a.groupid>=0 THEN 1 ELSE 0 END AS flag,
    CASE WHEN a.groupid>=0 THEN a.groupid ELSE a.albumid END AS id,
       a.albumname
  FROM album AS a INNER JOIN track AS b ON a.albumID=b.albumID
  WHERE (b.artist LIKE 'Jeremy Soule' OR
         b.originalArtist LIKE 'Jeremy Soule' OR
	     b.composer LIKE 'Jeremy Soule')
  GROUP BY id
  ORDER BY a.albumname

// albumModel 5
SELECT CASE WHEN a.groupid>=0 THEN 1 ELSE 0 END AS flag,
       CASE WHEN a.groupid>=0 THEN a.groupid ELSE a.albumid END AS id,
       a.albumname
  FROM album AS a INNER JOIN track AS b ON a.albumID=b.albumID
  WHERE a.albumID=2 AND
        (b.artist LIKE 'Steve Jablonsky' OR
         b.originalArtist LIKE 'Steve Jablonsky' OR
	     b.composer LIKE 'Steve Jablonsky')
  GROUP BY id
  ORDER BY a.albumname

// albumModel 6
SELECT CASE WHEN a.groupid>=0 THEN 1 ELSE 0 END AS flag,
       CASE WHEN a.groupid>=0 THEN a.groupid ELSE a.albumid END AS id,
       a.albumname
  FROM album AS a INNER JOIN track AS b ON a.albumID=b.albumID
  WHERE a.groupID=10 AND
        (b.artist LIKE 'Jeremy Soule' OR
        b.originalArtist LIKE 'Jeremy Soule' OR
         b.composer LIKE 'Jeremy Soule')
  GROUP BY id
  ORDER BY a.albumname

// albumModel 7
SELECT CASE WHEN a.groupid>=0 THEN 1 ELSE 0 END AS flag,
       CASE WHEN a.groupid>=0 THEN a.groupid ELSE a.albumid END AS id,
       a.albumname
  FROM album AS a INNER JOIN track AS b ON a.albumID=b.albumID
  WHERE b.genreID=1 AND
        (b.artist LIKE 'John Williams' OR
         b.originalArtist LIKE 'John Williams' OR
         b.composer LIKE 'John Williams')
  GROUP BY id
  ORDER BY a.albumname

// albumModel 8
SELECT CASE WHEN a.groupid>=0 THEN 1 ELSE 0 END AS flag,
       CASE WHEN a.groupid>=0 THEN a.groupid ELSE a.albumid END AS id,
       a.albumname
  FROM album AS a INNER JOIN track AS b ON a.albumID=b.albumID
  WHERE a.albumID=2 AND
        b.genreID=3 AND
        (b.artist LIKE 'Steve Jablonsky' OR
         b.originalArtist LIKE 'Steve Jablonsky' OR
         b.composer LIKE 'Steve Jablonsky')
  GROUP BY id
  ORDER BY a.albumname

// albumModel 9
SELECT CASE WHEN a.groupid>=0 THEN 1 ELSE 0 END AS flag,
       CASE WHEN a.groupid>=0 THEN a.groupid ELSE a.albumid END AS id,
       a.albumname
  FROM album AS a INNER JOIN track AS b ON a.albumID=b.albumID
  WHERE a.groupID=20 AND
        b.genreID=1 AND
        (b.artist LIKE 'John Williams' OR
         b.originalArtist LIKE 'John Williams' OR
         b.composer LIKE 'John Williams')
  GROUP BY id
  ORDER BY a.albumname
 
 // albumModel 10 
SELECT CASE WHEN a.groupid>=0 THEN 1 ELSE 0 END AS flag,
       CASE WHEN a.groupid>=0 THEN a.groupid ELSE a.albumid END AS id,
      a.albumname
  FROM album AS a INNER JOIN track AS b ON a.albumID=b.albumID
  WHERE b.genreID=1
  GROUP BY id
  ORDER BY a.albumname

// albumModel 11
SELECT CASE WHEN a.groupid>=0 THEN 1 ELSE 0 END AS flag,
       CASE WHEN a.groupid>=0 THEN a.groupid ELSE a.albumid END AS id,
       a.albumname
  FROM album AS a INNER JOIN track AS b ON a.albumID=b.albumID
  WHERE a.albumID=3 AND b.genreID=1
  GROUP BY id
  ORDER BY a.albumname

// albumModel 12
SELECT CASE WHEN a.groupid>=0 THEN 1 ELSE 0 END AS flag,
       CASE WHEN a.groupid>=0 THEN a.groupid ELSE a.albumid END AS id,
       a.albumname
  FROM album AS a INNER JOIN track AS b ON a.albumID=b.albumID
  WHERE a.groupID=20 AND b.genreID=1
  GROUP BY id
  ORDER BY a.albumname

// albumModelUtilities 1
SELECT 0 AS groupFlag, b.albumID AS albumID, a.artist AS artist, COUNT(a.artist) AS artistCount
    FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
    WHERE b.groupID=-1 AND a.artist NOT LIKE ''
    GROUP BY b.albumID, a.artist
  UNION 
SELECT 1 AS groupFlag, b.groupID AS albumID, a.artist AS artist, COUNT(a.artist) AS artistCount
    FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
    WHERE b.groupID>=0 AND a.artist NOT LIKE ''
    GROUP BY b.groupID, a.artist
  UNION 
SELECT 0 AS groupFlag, b.albumID AS albumID, a.originalArtist AS artist, COUNT(a.originalArtist) AS artistCount
    FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
    WHERE b.groupID=-1 AND a.originalArtist NOT LIKE ''
    GROUP BY b.albumID, a.originalArtist
  UNION 
SELECT 1 AS groupFlag, b.groupID AS albumID, a.originalArtist AS artist, COUNT(a.originalArtist) AS artistCount
    FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
    WHERE b.groupID>=0 AND a.originalArtist NOT LIKE ''
    GROUP BY b.groupID, a.originalArtist
  UNION 
SELECT 0 AS groupFlag, b.albumID AS albumID, a.composer AS artist, COUNT(a.composer) AS artistCount
    FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
    WHERE b.groupID=-1 AND a.composer NOT LIKE ''
    GROUP BY b.albumID, a.composer
  UNION 
SELECT 1 AS groupFlag, b.groupID AS albumID, a.composer AS artist, COUNT(a.composer) AS artistCount
    FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
    WHERE b.groupID>=0 AND a.composer NOT LIKE ''
    GROUP BY b.groupID, a.composer 
ORDER BY groupFlag, albumID, artistCount DESC

/*
SELECT 0 AS groupFlag, a.albumID AS albumID, a.artist AS artist, COUNT(a.artist) AS artistCount
    FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
    WHERE b.groupID==-1 AND a.artist NOT LIKE ''
    GROUP BY a.albumID, a.artist
  UNION
SELECT 1 AS groupFlag, b.groupID AS albumID, a.artist AS artist, COUNT(a.artist) AS artistCount
    FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
    WHERE b.groupID>=0 AND a.artist NOT LIKE ''
    GROUP BY b.groupID, a.artist
  UNION
SELECT 0 AS groupFlag, a.albumID AS albumID, a.originalArtist AS artist, COUNT(a.originalArtist) AS artistCount
    FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
    WHERE b.groupID==-1 AND a.originalArtist NOT LIKE ''
    GROUP BY a.albumID, a.originalArtist
  UNION
SELECT 1 AS groupFlag, b.groupID AS albumID, a.originalArtist AS artist, COUNT(a.originalArtist) AS artistCount
   FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
    WHERE b.groupID>=0 AND a.originalArtist NOT LIKE ''
    GROUP BY b.groupID, a.originalArtist
  UNION
SELECT 0 AS groupFlag, a.albumID AS albumID, a.composer AS artist, COUNT(a.composer) AS artistCount
    FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
    WHERE b.groupID==-1 AND a.composer NOT LIKE ''
    GROUP BY a.albumID, a.composer
  UNION
SELECT 1 AS groupFlag, b.groupID AS albumID, a.composer AS artist, COUNT(a.composer) AS artistCount
    FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
    WHERE b.groupID>=0 AND a.composer NOT LIKE ''
    GROUP BY b.groupID, a.composer
ORDER BY groupFlag, albumID, artistCount DESC
*/

// albumModelUtilities 2
SELECT 0 AS groupFlag, b.albumID AS albumID, a.artist AS artist, COUNT(a.artist) AS artistCount
  FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
  WHERE b.albumID=2 AND a.artist NOT LIKE ''
	AND (a.artist LIKE 'Athlete' OR
	     a.originalArtist LIKE 'Athlete' OR
	     a.composer LIKE 'Athlete')
  GROUP BY b.albumID, a.artist

// albumModelUtilities 3
SELECT 0 AS groupFlag, b.albumID AS albumID, a.artist AS artist, COUNT(a.artist) AS artistCount
  FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
  WHERE b.albumID=2 AND a.artist NOT LIKE ''
    AND a.genreID=2
  GROUP BY b.albumID, a.artist

// albumModelUtilities 4
SELECT 0 AS groupFlag, b.albumID AS albumID, a.artist AS artist, COUNT(a.artist) AS artistCount
  FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
  WHERE b.albumID=2 AND a.artist NOT LIKE ''
    AND a.genreID=2
	AND (a.artist LIKE 'Athlete' OR
	     a.originalArtist LIKE 'Athlete' OR
	     a.composer LIKE 'Athlete')
  GROUP BY b.albumID, a.artist

// albumModelUtilities 5
SELECT 1 AS groupFlag, b.groupID AS albumID, a.artist AS artist, COUNT(a.artist) AS artistCount
  FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
  WHERE b.groupID=15 AND a.artist NOT LIKE ''
	AND (a.artist LIKE 'Jeremy Soule' OR
	     a.originalArtist LIKE 'Jeremy Soule' OR
	     a.composer LIKE 'Jeremy Soule')
  GROUP BY b.groupID, a.artist

// albumModelUtilities 6
SELECT 1 AS groupFlag, b.groupID AS albumID, a.artist AS artist, COUNT(a.artist) AS artistCount
  FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
  WHERE b.groupID=15 AND a.artist NOT LIKE ''
    AND a.genreID=1
  GROUP BY b.groupID, a.artist

// albumModelUtilities 7
SELECT 1 AS groupFlag, b.groupID AS albumID, a.artist AS artist, COUNT(a.artist) AS artistCount
  FROM track AS a INNER JOIN album AS b ON a.albumID=b.albumID
  WHERE b.groupID=15 AND a.artist NOT LIKE ''
    AND a.genreID=1
	AND (a.artist LIKE 'Jeremy Soule' OR
	     a.originalArtist LIKE 'Jeremy Soule' OR
	     a.composer LIKE 'Jeremy Soule')
  GROUP BY b.groupID, a.artist

// albumModelUtilities 8
SELECT 0 AS groupFlag, a.albumID AS albumID, b.imageID, COUNT(b.imageID) AS usage, 
    b.type AS type
  FROM image AS b INNER JOIN imagemap AS c ON (b.imageID=c.imageID)
    INNER JOIN track AS a ON (c.albumID=a.albumID AND c.trackID=a.trackID)
  WHERE c.albumID=2
    AND a.genreID=2
    AND (a.artist LIKE 'Athlete' OR
         a.originalArtist LIKE 'Athlete' OR
         a.composer LIKE 'Athlete')
  GROUP BY a.albumID, b.imageID
  ORDER BY a.albumID, b.imageID

// albumModelUtilities 9	
SELECT 1 AS groupFlag, d.groupID AS albumID, b.imageID, COUNT(b.imageID) AS usage, 
    b.type AS type
  FROM image AS b INNER JOIN imagemap AS c ON (b.imageID=c.imageID)
    INNER JOIN track AS a ON (c.albumID=a.albumID AND c.trackID=a.trackID)
    INNER JOIN album AS d ON (a.albumID=d.albumID)
  WHERE d.groupID=15
    AND a.genreID=1
    AND (a.artist LIKE 'Jeremy Soule' OR
         a.originalArtist LIKE 'Jeremy Soule' OR
         a.composer LIKE 'Jeremy Soule')
  GROUP BY d.groupID, b.imageID
  ORDER BY d.groupID, b.imageID
