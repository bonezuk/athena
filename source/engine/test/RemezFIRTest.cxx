#include "gtest/gtest.h"
#include "engine/inc/RemezFIR.h"

using namespace omega::engine;

//-------------------------------------------------------------------------------------------

TEST(RemezFIR, designBandWidthFIRFilter)
{
	const tint N = 30;
	double f[] = {0, .15, .2, .3, .35, .5};
	const double a[] = {0, 0, 1, 1, 0, 0};
	const double w[] = {1, 1, 1};
	const double b[] = {
		-9.14740606267554e-07, -0.0132815745135427, 4.50815794327054e-06, -0.0227391901997639, 
		5.80567543484568e-06, 0.0447649068234034, 1.53225273717582e-06, -0.0380715616942447, 
		1.48505518070342e-06, -0.0270869931233585, 2.71708112189860e-06, 0.141932483495935, 
		-4.87930542623759e-06, -0.254376414183629, -1.02541763855492e-05, 0.301292819502550, 
		-1.02541763855492e-05, -0.254376414183629, -4.87930542623759e-06, 0.141932483495935, 
		2.71708112189860e-06, -0.0270869931233585, 1.48505518070342e-06, -0.0380715616942447, 
		1.53225273717582e-06, 0.0447649068234034, 5.80567543484568e-06, -0.0227391901997639, 
		4.50815794327054e-06, -0.0132815745135427, -9.14740606267554e-07};

	double h[N + 1];
	
	bool res = RemezFIR::designBandPass(N, 3, f, a, w, h);
	ASSERT_TRUE(res);
	for(int i = 0; i < N + 1; i++)
	{
		EXPECT_NEAR(h[i], b[i], 0.000001);
	}
}

//-------------------------------------------------------------------------------------------

TEST(RemezFIR, designHilbertFIRFilter)
{
	const tint N = 30;
	double hf[] = {0.05, 0.45};
	const double ha[] = {1, 1};
	const double hw[] =	{1000};
	const double hb[] = {-0.00419563589034877, 1.51424873732622e-15, -0.00928210154880479, 6.18177841192320e-16, -0.0188358069977063, 1.21094131347115e-15, -0.0344010080193255, 9.61041302648788e-16, -0.0595515755697025,
			1.25589949896924e-15, -0.103037636419894, 8.54044024472374e-16, -0.196831535623640, 3.67836436250229e-16, -0.631353640882195, 0, 0.631353640882195, -3.67836436250229e-16, 0.196831535623640, -8.54044024472374e-16,
			0.103037636419894, -1.25589949896924e-15, 0.0595515755697025, -9.61041302648788e-16, 0.0344010080193255, -1.21094131347115e-15, 0.0188358069977063, -6.18177841192320e-16, 0.00928210154880479, -1.51424873732622e-15,
			0.00419563589034877};
	
	double h[N + 1];

	bool res = RemezFIR::designHilbert(N, 1, hf, ha, hw, h);
	ASSERT_TRUE(res);
	for(int i = 0; i < N + 1; i++)
	{
		EXPECT_NEAR(h[i], hb[i], 0.003);
	}
}

//-------------------------------------------------------------------------------------------
