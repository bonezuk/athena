set(TIGER_INSTALL "${TIGER_ROOT_DIRECTORY}")

if (${CMAKE_GENERATOR} MATCHES "Unix Makefiles")
	set(TIGER_BIN_INSTALL "${TIGER_ROOT_DIRECTORY}/${BINARY_OUTPUT_DIRECTORY}")
else (${CMAKE_GENERATOR} MATCHES "Unix Makefiles")
	if (${TIGER_DEBUG_BUILD})
		set(TIGER_BIN_INSTALL "${TIGER_ROOT_DIRECTORY}/Debug")
	else (${TIGER_DEBUG_BUILD})
		set(TIGER_BIN_INSTALL "${TIGER_ROOT_DIRECTORY}/Release")
	endif (${TIGER_DEBUG_BUILD})
endif (${CMAKE_GENERATOR} MATCHES "Unix Makefiles")

message("Build directory structure")
message("${TIGER_BIN_INSTALL}")

message("Build directory structure")
message("${TIGER_BIN_INSTALL}")

file(MAKE_DIRECTORY "${TIGER_INSTALL}")
file(MAKE_DIRECTORY "${TIGER_BIN_INSTALL}")
file(MAKE_DIRECTORY "${TIGER_INSTALL}/plugins")
file(MAKE_DIRECTORY "${TIGER_INSTALL}/plugins/platforms")
file(MAKE_DIRECTORY "${TIGER_INSTALL}/plugins/imageformats")
file(MAKE_DIRECTORY "${TIGER_INSTALL}/plugins/sqldrivers")
file(MAKE_DIRECTORY "${TIGER_INSTALL}/data")
file(MAKE_DIRECTORY "${TIGER_INSTALL}/data/license")
file(MAKE_DIRECTORY "${TIGER_INSTALL}/help")

message("Copy QtCore")
file(GLOB QTCORE_LIBRARY_FILES "${QT_HOME}/lib/${QT_CORE_LIBNAME}.${LIBEXT}*")
file(COPY ${QTCORE_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

message("Copy QtGui")
file(GLOB QTGUI_LIBRARY_FILES "${QT_HOME}/lib/${QT_GUI_LIBNAME}.${LIBEXT}*")
file(COPY ${QTGUI_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

message("Copy QtXml")
file(GLOB QTXML_LIBRARY_FILES "${QT_HOME}/lib/${QT_XML_LIBNAME}.${LIBEXT}*")
file(COPY ${QTXML_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

message("Copy QtWidgets")
file(GLOB QTWIDGETS_LIBRARY_FILES "${QT_HOME}/lib/${QT_WIDGETS_LIBNAME}.${LIBEXT}*")
file(COPY ${QTWIDGETS_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

message("Copy QtTest")
file(GLOB QTTEST_LIBRARY_FILES "${QT_HOME}/lib/${QT_TEST_LIBNAME}.${LIBEXT}*")
file(COPY ${QTTEST_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

message("Copy Qt5CLucene")
file(GLOB QTCLUCENE_LIBRARY_FILES "${QT_HOME}/lib/libQt5CLucene.${LIBEXT}*")
file(COPY ${QTCLUCENE_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

message("Copy Qt5PrintSupport")
file(GLOB QTPRINTSUPPORT_LIBRARY_FILES "${QT_HOME}/lib/libQt5PrintSupport.${LIBEXT}*")
file(COPY ${QTPRINTSUPPORT_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

message("Copy Qt5Help")
file(GLOB QTHELP_LIBRARY_FILES "${QT_HOME}/lib/libQt5Help.${LIBEXT}*")
file(COPY ${QTHELP_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

message("Copy Qt5Sql")
file(GLOB QTSQL_LIBRARY_FILES "${QT_HOME}/lib/libQt5Sql.${LIBEXT}*")
file(COPY ${QTSQL_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

message("Copy Qt5Network")
file(GLOB QTNETWORK_LIBRARY_FILES "${QT_HOME}/lib/libQt5Network.${LIBEXT}*")
file(COPY ${QTNETWORK_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

if (NOT ${TIGER_RASPBIAN_BUILD})
	message("Copy Assistant")
	file(COPY "${QT_HOME}/bin/assistant" DESTINATION ${TIGER_BIN_INSTALL})
endif (NOT ${TIGER_RASPBIAN_BUILD})

message("Copy Qt image formats")
set(QTPLUGIN_PLATFORM_FILES "libqlinuxfb.so" "libqminimal.so" "libqoffscreen.so" "libqxcb.so")
set(QTPLUGIN_IMAGE_FILES "libqjpeg.so" "libqgif.so" )

foreach (QTPLUGIN_PLATFORM_FILE ${QTPLUGIN_PLATFORM_FILES})
	file(COPY "${QT_HOME}/plugins/platforms/${QTPLUGIN_PLATFORM_FILE}" DESTINATION "${TIGER_INSTALL}/plugins/platforms")
endforeach (QTPLUGIN_PLATFORM_FILE)

foreach (QTPLUGIN_IMAGE_FILE ${QTPLUGIN_IMAGE_FILES})
	file(COPY "${QT_HOME}/plugins/imageformats/${QTPLUGIN_IMAGE_FILE}" DESTINATION "${TIGER_INSTALL}/plugins/imageformats")
endforeach (QTPLUGIN_IMAGE_FILE)

file(COPY "${QT_HOME}/plugins/sqldrivers/libqsqlite.so" DESTINATION "${TIGER_INSTALL}/plugins/sqldrivers")

message("Copy libxml2")
file(GLOB LIBXML_LIBRARY_FILES "${LIBXML_HOME}/lib/${LIBXML_LIBNAME}.${LIBEXT}*")
file(COPY ${LIBXML_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

message("Copy UPnP")
file(GLOB LIBUPNP_LIBRARY_FILES "${LIBUPNP_HOME}/lib/*.${LIBEXT}*")
file(COPY ${LIBUPNP_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

message("Copy Musepack Decoder")
file(GLOB MUSEPACK_LIBRARY_FILES "${MUSEPACK_HOME}/lib/*.${LIBEXT}*")
file(COPY ${MUSEPACK_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

message("Copy WavPack")
file(GLOB WAVPACK_LIBRARY_FILES "${WAVPACK_HOME}/lib/${WAVPACK_LIBNAME}.${LIBEXT}*")
file(COPY ${WAVPACK_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

message("Copy GTest")
file(GLOB GTEST_LIBRARY_FILES "${GTEST_HOME}/lib/*.${LIBEXT}*")
file(COPY ${GTEST_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

message("Copy GMock")
file(GLOB GMOCK_LIBRARY_FILES "${GMOCK_HOME}/lib/*.${LIBEXT}*")
file(COPY ${GMOCK_LIBRARY_FILES} DESTINATION ${TIGER_BIN_INSTALL})

message("Copy license resources")
file(GLOB LICENSE_SOUND_FILES "${CMAKE_SOURCE_DIR}/source/build/Resources/*.ogg")
file(COPY ${LICENSE_SOUND_FILES} DESTINATION "${TIGER_INSTALL}/data/license")
